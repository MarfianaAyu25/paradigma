>> def multiply_2_pure(numbers):
    new_numbers = []
    for n in numbers:
        new_numbers.append(n * 2)
    return new_numbers

    original_numbers = [1, 3, 5, 10]
    changed_numbers = multiply_2_pure(original_numbers)
    print(original_numbers) # [1, 3, 5, 10]
    print(changed_numbers)  # [2, 6, 10, 20]
>>[1, 3, 5, 10]
  [2, 6, 10, 20]

>> mutable_collection = ['Tim', 10, [4, 5]]
   immutable_collection = ['Tim', 10, [4, 5]]
   print(mutable_collection[2])
   print(immutable_collection[2])
   mutable_collection[1] = 15
   immutable_collection[1] = 15
>> [4, 5]
   [4, 5]

>> immutable_collection[2].append(6)
   print(immutable_collection[2])
>> [4, 5, 6]

>> immutable_collection[2] = [4, 5]
>> [4, 5]

>> def write_repeat(message, n):
    for i in range(n):
        print(message)
   write_repeat('Hello', 5)
>> Hello
   Hello
   Hello
   Hello
   Hello

>> def hof_write_repeat(message, n, action):
    for i in range(n):
        action(message)
   hof_write_repeat('Hello', 5, print)
   import logging
   hof_write_repeat('Hello', 5, logging.error)
>> Hello
   Hello
   Hello
   Hello
   Hello
   ERROR:root:Hello
   ERROR:root:Hello
   ERROR:root:Hello
   ERROR:root:Hello
   ERROR:root:Hello

>> def add2(numbers):
    new_numbers = []
    for n in numbers:
        new_numbers.append(n + 2)
    return new_numbers
   print(add2([23, 88]))
>> [25, 90]

>>def hof_add(increment):
    def add_increment(numbers):
        new_numbers = []
        for n in numbers:
            new_numbers.append(n + increment)
        return new_numbers
    return add_increment
    add5 = hof_add(5)
    print(add5([23, 88]))
    add10 = hof_add(10)
    print(add10([23, 88]))
>> [28, 93]
   [33, 98]

>> def hof_product(multiplier):
    return lambda x: x * multiplier
   mult6 = hof_product(6)
   print(mult6(6))
>> 36

>> names = ['Shivani', 'Jason', 'Yusef', 'Sakura']
   greeted_names = map(lambda x: 'Hi ' + x, names)
   print(greeted_names)
   for name in greeted_names:
    print(name)
>> <map object at 0x7f3f1d1a4850>
   Hi Shivani
   Hi Jason
   Hi Yusef
   Hi Sakura

>> numbers = [13, 4, 18, 35]
   div_by_5 = filter(lambda num: num % 5 == 0, numbers)
   print(list(div_by_5))
>> [35]

>> arbitrary_numbers = map(lambda num: num ** 3, filter(lambda num: num % 3 == 0, range(1, 21)))
   print(list(arbitrary_numbers))
>> [27, 216, 729, 1728, 3375, 5832]

>> names = ['Shivani', 'Jan', 'Yusef', 'Sakura']
   greeted_names = ['Hi ' + name for name in names]
   print(greeted_names)
>> ['Hi Shivani', 'Hi Jan', 'Hi Yusef', 'Hi Sakura']

>> numbers = [13, 4, 18, 35]
   div_by_5 = [num for num in numbers if num % 5 == 0]
   print(div_by_5)
   arbitrary_numbers = [num ** 3 for num in range(1, 21) if num % 3 == 0]
   print(arbitrary_numbers)
>> [35]
   [27, 216, 729, 1728, 3375, 5832]

>>